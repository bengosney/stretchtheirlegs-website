[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools", "wheel" ]

[project]
name = "stretchtheirlegs"
version = "2.0.0"
description = "Corporate website for Stretch Their Legs"
authors = [
  { name = "Ben Gosney", email = "bengosney@googlemail.com" },
]
# [[[cog
# import cog
# with open(".python-version") as f:
#   version = f.read().strip()
# cog.outl(f"requires-python = \">={version}\"")
# ]]]
requires-python = ">=3.13"
# [[[end]]] (checksum: cd7dfc1c72006b07656d9d1f6147982b)

classifiers = [
  # [[[cog
  # cog.outl(f"\"Programming Language :: Python :: {version.split('.')[0]} :: Only\",")
  # cog.outl(f"\"Programming Language :: Python :: {version}\",")
  # ]]]
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  # [[[end]]] (checksum: f9312ce79962799e985b47095be03edb)
]
dependencies = [
  "boto3",
  "dj-database-url",
  "django",
  "django-csp",
  "django-extensions",
  "django-htmx",
  "django-storages",
  "gunicorn",
  "honeybadger",
  "opencv-python-headless",
  "psycopg2",
  "python-dateutil",
  "redis",
  "rustface",
  "secure",
  "wagtail",
  "wheel",
  "whitenoise",
  "whitenoise[brotli]",
]

optional-dependencies.dev = [
  "black",
  "cogapp",
  "django-debug-toolbar",
  "django-debugtools",
  "django-stubs",
  "freezegun",
  "hypothesis",
  "icecream",
  "model-bakery",
  "mypy",
  "packaging",
  "pip-chill",
  "pip-tools",
  "pre-commit",
  "pytest",
  "pytest-clarity",
  "pytest-cov",
  "pytest-django",
  "pytest-picked",
  "pytest-watch",
  "pyyaml",
  "ruff",
  "tach",
  "testcontainers[postgres]",
  "ty",
  "uv",
]

[tool.black]
line-length = 128
# [[[cog
# cog.outl(f"target-version = [ 'py{version.replace('.','')}' ]")
# ]]]
target-version = [ 'py313' ]
# [[[end]]] (checksum: 0c7a79d78ab47be389c4270e04207a40)

[tool.ruff]
# [[[cog
# cog.outl(f"target-version = \"py{version.replace('.','')}\"")
# ]]]
target-version = "py313"
# [[[end]]] (checksum: 7ee9b2bab8765cca66d8030a46d4a46e)
line-length = 120
exclude = [ "migrations" ]

format.indent-style = "space"
format.quote-style = "double"
format.docstring-code-format = true

lint.select = [ "C90", "DJ", "E", "ERA", "F", "FURB", "I", "N", "PERF", "PL", "RUF", "TRY", "UP" ]

lint.isort.section-order = [
  "future",
  "standard-library",
  "third-party",
  "django",
  "wagtail",
  "first-party",
  "local-folder",
]

lint.isort.sections.django = [ "django" ]
lint.isort.sections.wagtail = [ "wagtail" ]

[tool.pycln]
all = true

[tool.mypy]
plugins = [ "mypy_django_plugin.main" ]

[tool.django-stubs]
django_settings_module = "stl.settings"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
